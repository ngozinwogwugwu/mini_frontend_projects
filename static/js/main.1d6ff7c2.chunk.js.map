{"version":3,"sources":["coffeeClicker/assets/coffee-images/coffee.jpg","coffeeClicker/assets/coffee-images/espresso.jpg","coffeeClicker/assets/coffee-images/herbal_tea.jpg","coffeeClicker/assets/coffee-images/latte.jpg","coffeeClicker/assets/coffee-images/mocha.jpg","scooterTable/motorcycle-solid.svg","SqliteHeaderViewer.js","MarkdownViewer.js","coffeeClicker/components/Header.js","coffeeClicker/components/MoodSelector.js","coffeeClicker/components/ZipCodeTextField.js","coffeeClicker/CoffeeForm.js","coffeeClicker/CoffeeApp.js","scooterTable/ScooterTable.js","scooterTable/ScooterTableApp.js","leetcodeProblems/twoSum.js","leetcodeProblems/tree.js","leetcodeProblems/deleteNodeBST.js","leetcodeProblems/nextGreaterNodeInLinkedList.js","leetcodeProblems/PracticeProblems.js","learner/AudioSample.js","learner/VocabTable.js","learner/Paragraph.js","learner/FrenchHarryPotter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SqliteHeaderViewer","state","file","fileByteArray","isCorrupt","corruptionReason","onFileInput","event","target","files","length","reader","FileReader","onload","Uint8Array","result","setState","checkForCorruption","readAsArrayBuffer","getHeaderString","headerString","i","String","fromCharCode","getAFile","fileName","GithubContent","owner","repo","branch","err","console","log","contents","name","path","getCorruptFile","getGoodFile","getPageSize","getSixValidationBytes","validationBytes","toString","slice","getFourValidationBytes","index","getFourByteInt","DataView","buffer","getInt32","validateValue","value","rightAnswer","label","introText","classes","this","props","padding","markdown","component","style","size","variant","onClick","className","button","accept","input","id","type","onChange","htmlFor","color","errorPaper","root","container","spacing","item","xs","sm","paper","React","Component","withStyles","theme","margin","unit","display","textAlign","sqliteHeader","align","palette","text","secondary","minWidth","MarkdownViewer","handleTextFieldChange","inputFieldText","key","placeholder","multiline","fullWidth","Header","PageHeader","MoodSelector","mood","handleMoodChange","bind","Row","Col","xsHidden","md","FormGroup","Radio","inline","ZipCodeTextField","code","format","zip","parse","validate","onValue","pattern","CoffeeForm","handleZipCodeValue","zipCode","handleCoffeeFormSubmit","textToDisplay","runResponseAnimation","getTemperature","temperature","image","openweathermapUrl","axios","method","url","responseType","then","response","data","main","temp","cityName","WriteOutCoffeeLogic","catch","error","alert","ms","Promise","resolve","setTimeout","whatToOrder","responseCopy","tempF","Math","round","push","latteImage","espressoImage","mochaImage","herbalTeaImage","coffeeImage","responseCopySize","forEach","a","sleep","disabled","height","src","alt","CoffeeApp","rel","href","integrity","crossOrigin","SimpleTable","getScooterData","scooters","render","numeric","map","row","model","license_plate","energy_level","distance_to_travel","location","lat","lng","scooterGrabber","setInterval","clearInterval","width","marginTop","overflowX","table","ScooterTableApp","logo","ScooterTable","TwoSum","twoSum","nums","input1","split","x","j","parseInt","input2","output","updateInput1","updateInput2","elevation","textBox","helperText","InputProps","readOnly","flexWrap","TreeNode","left","right","arrayToTree","treeArray","undefined","node","stringToArray","arrayString","numString","number","Number","isNaN","treeToJson","rootNode","children","leftNode","rightNode","DislayTree","border","tree","orientation","DeleteNodeBST","attachNodeToEnd","removeNode","parent","isLeft","newNode","findAndRemoveNode","deleteNode","valueToFind","NextGreaterNodeInLinkedList","nextLargerNodes","nodesArray","nextBigNodes","biggerVals","filter","PracticeProblems","AudioSample","controls","audioSource","VocabTable","vocabList","stickyHeader","aria-label","vocabSet","hover","french","directTranslation","english","Paragraph","sentences","sentence","paragraph","FrenchHarryPotter","Chapter1","title","paragraphs","App","handleChange","position","flexGrow","backgroundColor","background","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d6ff7c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coffee.40da0df0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/espresso.adef6225.jpg\";","module.exports = __webpack_public_path__ + \"static/media/herbal_tea.5e9ab4bc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/latte.47304121.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mocha.14351c73.jpg\";","module.exports = __webpack_public_path__ + \"static/media/motorcycle-solid.98497820.svg\";","import MarkdownRenderer from 'react-markdown-renderer';\nimport React from 'react';\nimport GithubContent from 'github-content';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst sqliteHeaderLength = 100;\nconst sqliteHeaderString = \"SQLite format 3\\0\";\nconst sixByteValidationString = \" 0x01 0x01 0x00 0x40 0x20 0x20\";\nconst fourByteValidationZero = \"0x00000000\";\nconst fourByteValidationOne = \"0x00000001\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  input: {\n    display: 'none',\n  },\n  errorPaper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: 'red',\n  },\n  sqliteHeader: {\n    align: 'center',\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  container: {\n    minWidth: '300px',\n  },\n});\n\nclass SqliteHeaderViewer extends React.Component {\n  state = {\n    file: {},\n    fileByteArray: [],\n    isCorrupt: false,\n    corruptionReason: \"\"\n  };\n\n  onFileInput = event => {\n    if (event.target.files.length <= 0) {\n      return;\n    }\n    var file = event.target.files[0];\n    var reader = new FileReader();\n\n    reader.onload = () =>  {\n      var fileByteArray = new Uint8Array(reader.result);\n      this.setState({ fileByteArray: fileByteArray });\n      this.checkForCorruption();\n    };\n\n    reader.readAsArrayBuffer(file);\n    this.setState({file: file});\n  }\n\n  getHeaderString = () => {\n    if (this.state.fileByteArray.length < sqliteHeaderLength) return \"\";\n\n    var headerString = \"\";\n    var headerStringLength = 16;\n    for (var i = 0; i < headerStringLength; i++) {\n      headerString += String.fromCharCode(this.state.fileByteArray[i]);\n    }\n    return headerString;\n  }\n\n  getAFile = (isCorrupt) => {\n    var fileName = isCorrupt ? 'tests/files/databases/corruptheader-1.cdb' : 'tests/files/databases/1table-1page.cdb'\n    var options = {\n      owner: 'uchicago-cs',\n      repo: 'chidb',\n      branch: 'master' // defaults to master\n    };\n\n    var process_file = (err, file) => {\n      if (err) return console.log(err);\n      this.setState({ fileByteArray: file.contents });\n      this.checkForCorruption();\n      file.name = file.path;\n      this.setState({file: file});\n    }\n\n    var gc = new GithubContent(options);\n    gc.file(fileName, process_file);\n  }\n\n  getCorruptFile = () => {\n    this.getAFile(true);\n  }\n\n  getGoodFile = () => {\n    this.getAFile(false);\n  }\n\n  getPageSize = () => {\n    if (this.state.fileByteArray.length < sqliteHeaderLength) return \"\";\n    return (((this.state.fileByteArray[16] & 0xFF) << 8) | (this.state.fileByteArray[17] & 0xFF));\n  }\n\n  getSixValidationBytes = () => {\n    if (this.state.fileByteArray.length < sqliteHeaderLength) return \"\";\n\n    var validationBytes = \"\";\n    for (var i = 18; i < 24; i++) {\n      var hexValue = ('0' + (this.state.fileByteArray[i] & 0xFF).toString(16)).slice(-2);\n      validationBytes += \" 0x\" + hexValue\n    }\n    return validationBytes;\n  }\n\n  getFourValidationBytes = (index) => {\n    if (this.state.fileByteArray.length < sqliteHeaderLength) return \"\";\n\n    var validationBytes = \"0x\";\n    for (var i = index; i < index+4; i++) {\n      validationBytes += ('0' + (this.state.fileByteArray[i] & 0xFF).toString(16)).slice(-2);\n    }\n    return validationBytes;\n  }\n\n  getFourByteInt = (index) => {\n    if (this.state.fileByteArray.length < sqliteHeaderLength) return \"\";\n\n    var view = new DataView(this.state.fileByteArray.buffer, index, 4);\n    return view.getInt32()\n  }\n\n  validateValue = (value, rightAnswer, label) => {\n    if (value !== rightAnswer) {\n      this.setState({corruptionReason: \"Incorrect \" + label + \": \" + value});\n    }\n    return (value !== rightAnswer);\n  }\n\n  checkForCorruption = () => {\n    var isCorrupt = (\n      this.validateValue(this.getHeaderString(), sqliteHeaderString, \"header string\")\n      || this.validateValue(this.getSixValidationBytes(), sixByteValidationString, \"Validation Bytes\")\n      || this.validateValue(this.getFourByteInt(48), 20000, \"Page Cache Size\")\n\n      || this.validateValue(this.getFourValidationBytes(32), fourByteValidationZero, \"Validation Bytes at index 32\")\n      || this.validateValue(this.getFourValidationBytes(36), fourByteValidationZero, \"Validation Bytes at index 36\")\n      || this.validateValue(this.getFourValidationBytes(44), fourByteValidationOne, \"Validation Bytes at index 44\")\n      || this.validateValue(this.getFourValidationBytes(52), fourByteValidationZero, \"Validation Bytes at index 52\")\n      || this.validateValue(this.getFourValidationBytes(56), fourByteValidationOne, \"Validation Bytes at index 56\")\n      || this.validateValue(this.getFourValidationBytes(64), fourByteValidationZero, \"Validation Bytes at index 64\")\n    );\n\n    this.setState({isCorrupt: isCorrupt});\n  }\n\n  introText = '# SQLite Header Viewer\\n\\nI\\'ve been learning about [SQLite file headers](http://chi.cs.uchicago.edu/chidb/fileformat.html#file-header) using chidb. For fun I figured I\\'d try to make a visualizer using react. You can upload a SQLite file here (If you don\\'t already have a SQLite file, you can grab one from the [Chidb Github page](https://github.com/uchicago-cs/chidb/tree/master/tests/files/databases))\\n\\n## SQLite headers rundown\\n\\nSQLite headers are 100 bytes long, and contain a few things:\\n\\n - A string that says \"SQLite format 3\"\\n - bytewise checks\\n - Information about the database itself (page size, schema version, ...)\\n';\n\n\n  render() {\n    const { classes } = this.props;\n    const { file, fileByteArray, isCorrupt, corruptionReason } = this.state;\n\n    return (\n      <div>\n        <Paper padding=\"20\">\n          <MarkdownRenderer markdown={this.introText} />\n        </Paper>\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n          file Name: {file.name} <br/>\n          file Size: {file.size} bytes<br/>\n        </Typography>\n        <Button variant=\"contained\" component=\"span\" onClick={this.getCorruptFile} className={classes.button}>\n          Use Example (corrupt file)\n        </Button>\n        <Button variant=\"contained\" component=\"span\" onClick={this.getGoodFile} className={classes.button}>\n          Use Example (good file)\n        </Button>\n        <input\n          accept=\"*\"\n          className={classes.input}\n          id=\"contained-button-file\"\n          type=\"file\"\n          onChange={this.onFileInput}\n        />\n        <label htmlFor=\"contained-button-file\">\n          <Button variant=\"contained\" component=\"span\" className={classes.button}>\n            Upload your own\n          </Button>\n        </label>\n        <br/>\n        { isCorrupt &&\n          <Button variant=\"contained\" color=\"secondary\" className={classes.errorPaper}>\n            <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n              <br/>\n              Wow! This file is super corrupt!\n              <br/>\n              Why? {corruptionReason}\n            </Typography>\n          </Button>        \n        }\n        { (fileByteArray.length !== 0) &&\n          <div className={classes.root}>\n            <Grid container spacing={24} className={classes.container}>\n              <Grid item xs={12} sm={12}>\n                <Paper className={classes.paper}>Title:<br/>{this.getHeaderString()}</Paper>\n              </Grid>\n\n              <Grid item xs={2} sm={2}>\n                <Paper className={classes.paper}>Page Size:<br/>{this.getPageSize()}</Paper>\n              </Grid>\n              <Grid item xs={4} sm={4}>\n                <Paper className={classes.paper}>Validation Bytes:<br/>{this.getSixValidationBytes()}</Paper>\n              </Grid>\n              <Grid item xs={3} sm={3}>\n                <Paper className={classes.paper}>File Change Counter:<br/>{this.getFourByteInt(24)}</Paper>\n              </Grid>\n              <Grid item xs={3} sm={3}>\n                <Paper className={classes.paper}>Not used<br/>:)</Paper>\n              </Grid>\n\n              <Grid item xs={3} sm={3}>\n                <Paper className={classes.paper}>Validation Bytes:<br/>{this.getFourValidationBytes(32)}</Paper>\n              </Grid>\n              <Grid item xs={3} sm={3}>\n                <Paper className={classes.paper}>Validation Bytes:<br/>{this.getFourValidationBytes(36)}</Paper>\n              </Grid>\n              <Grid item xs={3} sm={3}>\n                <Paper className={classes.paper}>Schema Version:<br/>{this.getFourByteInt(40)}</Paper>\n              </Grid>\n              <Grid item xs={3} sm={3}>\n                <Paper className={classes.paper}>Validation Bytes:<br/>{this.getFourValidationBytes(44)}</Paper>\n              </Grid>\n\n              <Grid item xs={3} sm={3}>\n                <Paper className={classes.paper}>Page Cache Size:<br/>{this.getFourByteInt(48)}</Paper>\n              </Grid>\n              <Grid item xs={3} sm={3}>\n                <Paper className={classes.paper}>Validation Bytes:<br/>{this.getFourValidationBytes(52)}</Paper>\n              </Grid>\n              <Grid item xs={3} sm={3}>\n                <Paper className={classes.paper}>Validation Bytes:<br/>{this.getFourValidationBytes(56)}</Paper>\n              </Grid>\n              <Grid item xs={3} sm={3}>\n                <Paper className={classes.paper}>User Cookie:<br/>{this.getFourByteInt(60)}</Paper>\n              </Grid>\n\n              <Grid item xs={3} sm={3}>\n                <Paper className={classes.paper}>Validation Bytes:<br/>{this.getFourValidationBytes(64)}</Paper>\n              </Grid>\n\n            </Grid>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nSqliteHeaderViewer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SqliteHeaderViewer);","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ReactMarkdown from 'markdown-to-jsx';\n\nclass MarkdownViewer extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      inputFieldText:  \"# A bunch of example markdown text\\nhere's **some** normal *text*\\n\\n## Some python code\\n```\\nwhile (True):\\n  print('FOR-E-VER')\\n```\\n\\n## To-do list\\n- [ ] walk dog\\n- [x] get groceries\\n\\n## My weekly calendar\\n| Monday | Tuesday | Wednesday | Thursday(20) | Friday (21) |\\n| ----------- | ------------ | -------------- | ------------ | ----------- |\\n| dinner with Kate | Guitar Lesson | board games | Shakespeare in the park | concert |\\n| yoga | running | cook | yoga | running |\\n\"\n    }\n  }\n\n\n  handleTextFieldChange = (event) => {\n    this.setState({inputFieldText:event.target.value});\n  }\n\n  introText = '# Quick Markdown Viewer  \\n I made this so that I can read the formatted text of my notes as I take them. \\n\\n ## Instructions:  \\nJust write down your markdown in the left box and watch it appear in the right box :)';\n\n  render() {\n    return (\n      <div>\n        <Grid container spacing={24}>\n          <Grid item xs={12}>\n              <ReactMarkdown key='intro'>\n                {this.introText}\n              </ReactMarkdown>\n          </Grid>\n        </Grid>\n        <Grid container spacing={24}>\n          <Grid item xs={6}>\n            <TextField\n              id=\"outlined-textarea\"\n              label=\"Input Text\"\n              placeholder=\"Put your markdown here\"\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              value={this.state.inputFieldText}\n              onChange={this.handleTextFieldChange}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Paper padding=\"20\">\n              <ReactMarkdown key='results'>\n                {this.state.inputFieldText}\n              </ReactMarkdown>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default MarkdownViewer;\n","import React, { Component } from 'react';\nimport { PageHeader } from 'react-bootstrap';\n\nclass Header extends Component {\n  render () {\n    return (\n      <PageHeader>\n        <center><i className=\"fas fa-coffee fa-1x\"/> What Coffee Should I Get? <i className=\"fas fa-coffee fa-1x\" /></center>\n      </PageHeader>\n    );\n  }\n\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Radio, FormGroup, Row, Col } from 'react-bootstrap';\n\nexport default class MoodSelector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mood: null,\n    };\n\n    this.handleMoodChange = this.handleMoodChange.bind(this);\n  }\n\n  handleMoodChange(event) {\n    // TODO: make sure to grab the mood from the props\n    this.setState({'mood':event.target.value})\n    this.props.onChange(event.target.value);\n  }\n\n  render () {\n    return (\n      <div>\n        <br/><br/>\n        <Row>\n          <Col xsHidden md={4}></Col>\n          <Col xs={12} md={4}>\n            <FormGroup>\n              <Radio name=\"radioGroup\" value=\"happy\" onChange={this.handleMoodChange} inline>\n                <i className=\"fas fa-smile fa-3x\" />\n              </Radio>\n              <Radio name=\"radioGroup\" value=\"sleepy\" onChange={this.handleMoodChange} inline>\n                <i className=\"fas fa-meh fa-3x\" />\n              </Radio>\n              <Radio name=\"radioGroup\" value=\"sad\" onChange={this.handleMoodChange} inline>\n                <i className=\"fas fa-frown fa-3x\" />\n              </Radio>\n              <Radio name=\"radioGroup\" value=\"jittery\" onChange={this.handleMoodChange} inline>\n                <i className=\"fas fa-flushed fa-3x\" />\n              </Radio>\n              <Radio name=\"radioGroup\" value=\"overworked\" onChange={this.handleMoodChange} inline>\n                <i className=\"fas fa-dizzy fa-3x\" />\n              </Radio>\n            </FormGroup>\n          </Col>\n          <Col xsHidden md={4}></Col>\n        </Row>\n        <Row>\n          <Col xsHidden md={5}></Col>\n          <Col xs={12} md={2}>\n              <h3 style={{display: this.state.mood ? 'block' : 'none' }}>(Mood: {this.state.mood})</h3>\n          </Col>\n          <Col xsHidden md={4}></Col>\n        </Row>\n        <br/><br/>\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react'\nimport zip from 'zippo'\n\nexport default class ZipCodeTextField extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      code: ''\n    }\n\n    this.format = this.format.bind(this)\n  }\n\n  format (event) {\n    let { value } = event.target\n\n    this.setState({\n      code: zip.parse(value)\n    })\n\n    if (zip.validate(value) && this.props && this.props.onValue) {\n      this.props.onValue(value);\n    }\n  }\n\n  render () {\n    const { code } = this.state\n\n    return (\n      <input placeholder=\"zip code\" type='text' pattern='[0-9]*' value={code} onChange={this.format} />\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\n\nimport MoodSelector from './components/MoodSelector'\n// import CountrySelect from 'react-country-select';\nimport ZipCodeTextField from './components/ZipCodeTextField'\n\nimport coffeeImage from './assets/coffee-images/coffee.jpg'\nimport espressoImage from './assets/coffee-images/espresso.jpg'\nimport herbalTeaImage from './assets/coffee-images/herbal_tea.jpg'\nimport latteImage from './assets/coffee-images/latte.jpg'\nimport mochaImage from './assets/coffee-images/mocha.jpg'\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nclass CoffeeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zipCode: null,\n      mood: null,\n      textToDisplay: null,\n      temperature: null,\n      image: null\n    };\n  }\n\n  handleZipCodeValue = (value) => {\n    this.setState({zipCode: value});\n  }\n\n\n  handleMoodChange = (event) => {\n    this.setState({mood: event});\n  }\n\n  handleCoffeeFormSubmit = (event) => {\n    this.setState({textToDisplay: 'What coffee should you get?'});\n    this.runResponseAnimation();\n  }\n\n  runResponseAnimation = () => {\n    this.getTemperature()\n  }\n\n  getTemperature() {\n    var openweathermapUrl = \n      'http://api.openweathermap.org/data/2.5/weather' +\n      '?zip=' + this.state.zipCode +\n      '&APPID=1f43253a4757bc563036fed442803999' + // + this.state.weatherAppID +\n      '&units=metric';\n\n    return axios({\n      method:'get',\n      url:openweathermapUrl,\n      responseType:'json'\n    }).then((response) => {\n      this.setState({\n        temperature: response.data.main.temp,\n        cityName: response.data.name\n      });\n      this.WriteOutCoffeeLogic();\n    }).catch((error) => {\n      console.log(error);\n\n      // run coffee clicker in demo mode. Assume that it's a summer day in Boston.\n      alert(\"Can't obtain weather information (check the developer panel for more details). Running in demo mode\");\n      this.setState({\n        temperature: 20,\n        cityName: 'Boston'\n      });\n      this.WriteOutCoffeeLogic();\n    });\n  }\n\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  WriteOutCoffeeLogic() {\n    var whatToOrder = \"\";\n    var image = null;\n    var responseCopy = [];\n    var tempF = Math.round((this.state.temperature * 1.8) + 32);\n    responseCopy.push(\"It's \" + Math.round(this.state.temperature) + 'C (' + tempF + 'F) outside. ');\n    if (this.state.temperature < 18) {\n      responseCopy.push(\"It's cold in \" + this.state.cityName + \" today!\");\n      responseCopy.push(\"Get something hot.\");\n    } else if (this.state.temperature > 18) {\n      whatToOrder += \"Iced \"\n      responseCopy.push(\"It's hot in \" + this.state.cityName + \" today!\");\n      responseCopy.push(\"Get something iced.\");\n    } else {\n      responseCopy.push(\"What a nice day to be in \" + this.state.cityName)\n    }\n\n    switch(this.state.mood) {\n        case 'happy':\n            whatToOrder += \"Latte\"\n            responseCopy.push(\"Since you're happy...\");\n            responseCopy.push(\"you might as well have a latte.\");\n            image = latteImage;\n            break;\n        case 'sleepy':\n            whatToOrder += \"Espresso\"\n            responseCopy.push(\"You're sleepy?\");\n            responseCopy.push(\"Get some caffeine in you!\");\n            image = espressoImage;\n            break;\n        case 'sad':\n            whatToOrder += \"Mocha\"\n            responseCopy.push(\"You're sad?\");\n            responseCopy.push(\"Get something with chocolate.\");\n            image = mochaImage;\n            break;\n        case 'jittery':\n            whatToOrder += \"Herbal Tea\"\n            responseCopy.push(\"Stop drinking coffee if you feel jittery!\");\n            responseCopy.push(\"Have some tea.\");\n            image = herbalTeaImage;\n            break;\n        case 'overworked':\n            whatToOrder += \"Coffee\"\n            responseCopy.push(\"You're overworked?\");\n            responseCopy.push(\"It's gonna be a long day.\");\n            responseCopy.push(\"Have some plain coffee.\");\n            image = coffeeImage;\n            break;\n        default:\n            whatToOrder += \"Coffee\"\n            responseCopy.push(\"Have a coffee!\");\n    }\n    responseCopy.push(\"Get one \" + whatToOrder + \"!\");\n\n    // play the 'animation' of conversational text\n    this.setState({responseCopySize: responseCopy.length})\n    responseCopy.forEach(async (response, i) => {\n      await this.sleep(1300 * (i + 1));\n      this.setState({textToDisplay: response});\n      if (this.state.responseCopySize === (i+1)) {\n        this.setState({image: image})\n      }\n    });\n  }\n\n  render () {\n    return (\n      <div id=\"container\">\n        <Paper>\n          <form id=\"banner\" className=\"banner\" style={{display: this.state.textToDisplay ? 'none' : 'block' }}>\n            <Row id=\"row\">\n              <Col id=\"col\" xsHidden md={4}></Col>\n              <Col id=\"col\" xs={12} md={4}>\n                <center>\n                  <p>Enter your zip code and your mood!</p>\n                </center>\n              </Col>\n              <Col id=\"col\" xsHidden md={4}></Col>\n            </Row>\n              <Row id=\"row\">\n                <Col id=\"col\" xsHidden md={4}></Col>\n                <Col id=\"col\" xs={12} md={3}>\n                  <center>\n                    <ZipCodeTextField label=\"zip code\" placeholder=\"zip code\" onValue={this.handleZipCodeValue} />\n                    <i style={{display: this.state.zipCode ? 'block' : 'none' }} className=\"far fa-check-circle fa-2x\" />\n                  </center>\n                </Col>\n                <Col id=\"col\" xsHidden md={3}></Col>\n              </Row>\n            <br/>\n            <Row id=\"row\">\n              <center>\n                <MoodSelector onChange={this.handleMoodChange}/>\n              </center>\n            </Row>\n            <Row id=\"row\">\n              <Col id=\"col\" xsHidden md={5}></Col>\n              <Col id=\"col\" xs={12} md={2}>\n                <center>\n                  <Button variant=\"contained\" color=\"primary\"\n                    disabled={!this.state.zipCode || !this.state.mood}\n                    onClick={this.handleCoffeeFormSubmit}\n                  >Try it out</Button>\n                </center>\n              </Col>\n              <Col id=\"col\" xsHidden md={4}></Col>\n            </Row>\n          </form>\n          <h1 style={{display: this.state.textToDisplay ? 'block' : 'none' }}>\n            <center>{this.state.textToDisplay}</center>\n          </h1>\n          <center>\n            <img height=\"500px\" src={this.state.image} style={{display: this.state.image ? 'block' : 'none' }} alt=\"coffee to get\" />\n          </center>\n          <br/>\n          <br/>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default CoffeeForm;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport CoffeeForm from './CoffeeForm';\n\n\nclass CoffeeApp extends Component {\n  render() {\n    return (\n      <div>\n        <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.1.0/css/all.css\" integrity=\"sha384-lKuwvrZot6UHsBSfcMvOkWwlCMgc0TaWr+30HWe3a4ltaBwTZhyTEggF5tJv8tbt\" crossOrigin=\"anonymous\" />\n        <div>\n          <Header />\n        </div>\n        <div>\n          <CoffeeForm />\n        </div>\n      </div>  \n    );\n  }\n}\n\nexport default CoffeeApp;","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport axios from 'axios';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n});\n\nclass SimpleTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {scooters: []};\n  }\n\n  componentDidMount() {\n    // initial scooter data grab\n    this.getScooterData();\n\n    // grab scooter data every ten seconds\n    this.scooterGrabber = setInterval(\n      () => this.getScooterData(),\n      10000\n    );\n  }\n  componentWillUnmount() {\n    clearInterval(this.scooterGrabber);\n  }\n\n  getScooterData = () => {\n    var coupScooterEndpoint = 'https://qc05n0gp78.execute-api.eu-central-1.amazonaws.com/prod/scooters'; \n    return axios({\n      method:'get',\n      url:coupScooterEndpoint,\n      responseType:'json'\n    }).then((response) => {\n      this.setState({scooters: response.data.data.scooters});\n      \n    }).catch((error) => {\n      alert('error grabbing scooter data');\n      console.log(error);\n    });\n  }\n\n  render = () =>  {\n    return (\n      <div>\n        <Paper>\n          <Table>\n            <div>\n              <TableHead>\n                <TableRow>\n                  <TableCell>model</TableCell>\n                  <TableCell> license plate</TableCell>\n                  <TableCell>energy level</TableCell>\n                  <TableCell numeric>distance to travel</TableCell>\n                  <TableCell>location (lat/lon)</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.scooters.map(row => {\n                  return (\n                    <TableRow key={row.id}>\n                      <TableCell>{row.model}</TableCell>\n                      <TableCell>{row.license_plate}</TableCell>\n                      <TableCell>{row.energy_level}</TableCell>\n                      <TableCell>{row.distance_to_travel}</TableCell>\n                      <TableCell>{row.location.lat}, {row.location.lng}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </div>\n          </Table>\n        </Paper>\n      </div>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(SimpleTable);","import Link from '@material-ui/core/Link';\nimport React, { Component } from 'react';\nimport logo from './motorcycle-solid.svg';\nimport './ScooterApp.css';\n\nimport ScooterTable from './ScooterTable';\n\nclass ScooterTableApp extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <img src={logo} height=\"100px\" alt=\"logo\" />\n          <h1 className=\"App-title\">Scooter Table</h1>\n          Grabs information from an endpoint from a\n          <Link href=\"https://www.joincoup.com/en/berlin/how-it-works\"> Coup Scooters </Link>\n          endpoint to display their active scooter information. Updates every ten seconds\n        </header>\n        <br/><br/>\n        <ScooterTable />\n      </div>\n    );\n  }\n}\n\nexport default ScooterTableApp;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  textBox: {\n    margin: theme.spacing.unit * 2,\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing.unit * 5,\n      width: '100%',\n    },\n  },\n});\n\nclass TwoSum extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      input1: \"2, 7, 11, 15\",\n      input2: \"9\",\n      output: \"\",\n    };\n  }\n\n  twoSum = (event) => {\n    let nums = this.state.input1.split`,`.map(x=>+x)\n    for (let i=0; i< nums.length; i++) {\n      for (let j=i+1; j< nums.length; j++) {\n        if (nums[i]+nums[j] === parseInt(this.state.input2)) {\n          this.setState({output: nums[i] + ', ' + nums[j]});\n          return\n        }\n      }\n    }\n    this.setState({output: \"\"});\n  }\n\n  updateInput1 = (event) => {\n    this.setState({input1: event.target.value})\n  }\n\n  updateInput2 = (event) => {\n    this.setState({input2: event.target.value})\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper elevation={3}>\n          <a href=\"https://leetcode.com/problems/two-sum/\">two sum</a>: If you have an array of ints, find the pair that gives you a goal int\n          <br />\n\n          <TextField\n            id=\"standard-helperText\"\n            label=\"nums\"\n            className={classes.textBox}\n            value={this.state.input1}\n            onChange={this.updateInput1}\n            helperText=\"array of non-negative integers\"\n          />\n\n          <TextField\n            id=\"standard-helperText\"\n            label=\"Sum\"\n            className={classes.textBox}\n            value={this.state.input2}\n            onChange={this.updateInput2}\n            helperText=\"goal number\"\n          />\n\n          <Button\n            variant=\"contained\"\n            className={classes.textBox}\n            color=\"primary\"\n            onClick={this.twoSum}\n          >\n            Compute!\n          </Button>\n\n          <TextField\n            id=\"standard-read-only-input\"\n            label=\"Output\"\n            className={classes.textBox}\n            value={this.state.output}\n            InputProps={{\n              readOnly: true,\n            }}\n            helperText=\"two numbers to sum to goal number\"\n          />\n\n        </Paper>\n      </div>\n    );\n  }\n}\n\nTwoSum.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TwoSum);\n","import React from 'react';\nimport Tree from 'react-d3-tree';\n\nexport class TreeNode {\n  constructor (value) {\n    this.value = value\n    this.left = null\n    this.right = null\n    return this\n  }\n}\n\nexport const arrayToTree = (treeArray, i=0) => {\n  if (treeArray === undefined || i >= treeArray.length) {\n    return null\n  }\n  const node = new TreeNode(treeArray[i])\n  node.left = arrayToTree(treeArray, 2*i + 1)\n  node.right = arrayToTree(treeArray, 2*i + 2)\n  return node\n}\n\nexport const stringToArray = arrayString => {\n  if (arrayString === \"\" || arrayString === null) {\n    return [0]\n  }\n  return arrayString.split(\",\").map((numString) => {\n    let number = parseInt(numString);\n    if (Number.isNaN(number)) {\n      number = null\n    }\n    return number;\n  })\n}\n\nexport const treeToJson = rootNode => {\n  if (rootNode === null || rootNode === undefined || rootNode.value === null) {\n    return null\n  }\n\n  let children = []\n  const leftNode = treeToJson(rootNode.left)\n  if (leftNode !== null) {\n    children.push(leftNode)\n  }\n\n  const rightNode = treeToJson(rootNode.right)\n  if (rightNode !== null) {\n    children.push(rightNode)\n  }\n\n  const treeJson = {\n    name: rootNode.value,\n    children: children\n  }\n\n  return treeJson\n}\n\nexport const arrayToJson = treeArray => {\n  return treeToJson(arrayToTree(treeArray))\n}\n\n\nexport class DislayTree extends React.Component {\n  render() {\n    return (\n      <div id=\"treeWrapper\" style={{height: '30em', width: '30em', border: '3px solid black'}}>\n        { this.props.tree && <Tree orientation=\"vertical\" data={[treeToJson(this.props.tree)]} /> }\n        { !this.props.tree && <Tree orientation=\"vertical\" data={[arrayToJson(this.props.treeArray)]} /> }\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { DislayTree, arrayToTree, stringToArray} from './tree.js'\n\n\nconst styles = theme => ({\n  textBox: {\n    margin: theme.spacing.unit * 2,\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing.unit * 5,\n      width: '100%',\n    },\n  },\n});\n\nclass DeleteNodeBST extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      input1: \"5,3,6,2,4,null,7\",\n      input2: \"3\",\n      output: arrayToTree([0]),\n    };\n  }\n\n  attachNodeToEnd = (root, node) => {\n    if (root === null) {\n      return node\n    }\n    if (root.right === null) {\n      root.right = node\n      return root\n    }\n    if (root.left === null) {\n      root.left = node\n      return root\n    }\n\n    return this.attachNodeToEnd(root.left, node)\n  }\n\n  removeNode = (parent, isLeft) => {\n    const node = isLeft ? parent.left : parent.right\n    const newNode = this.attachNodeToEnd(node.left, node.right)\n\n    if (isLeft) {\n      parent.left = newNode\n    } else {\n      parent.right = newNode\n    }\n  }\n\n  findAndRemoveNode = (root, value) => {\n    if (root === null || root === undefined) {\n      return null\n    }\n    if (root.value === value) {\n      return root\n    }\n\n    // debugger;\n    if (root.left.value === value) {\n      this.removeNode(root, true)\n      return\n    }\n\n    if (root.right.value === value) {\n      this.removeNode(root, false)\n      return\n    }\n\n    this.findAndRemoveNode(root.left, value)\n    this.findAndRemoveNode(root.right, value)\n  }\n\n  deleteNode = event => {\n    const rootNode = arrayToTree(stringToArray(this.state.input1))\n    const valueToFind = parseInt(this.state.input2)\n    this.findAndRemoveNode(rootNode, valueToFind)\n    this.setState({output: rootNode});\n  }\n\n  updateInput1 = event => {\n    this.setState({input1: event.target.value})\n  }\n\n  updateInput2 = event => {\n    this.setState({input2: event.target.value})\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper elevation={3}>\n          <a href=\"https://leetcode.com/problems/delete-node-in-a-bst/\"> Delete Node in a BST</a>: (buggy)\n          <br />\n          <table>\n            <tr>\n              <th>\n                <TextField\n                  id=\"standard-helperText\"\n                  label=\"nums\"\n                  className={classes.textBox}\n                  value={this.state.input1}\n                  onChange={this.updateInput1}\n                  helperText=\"array of non-negative integers\"\n                />\n              </th>\n              <th>\n                <TextField\n                  id=\"standard-helperText\"\n                  label=\"nums\"\n                  className={classes.textBox}\n                  value={this.state.input2}\n                  onChange={this.updateInput2}\n                  helperText=\"node to remove\"\n                />\n                <Button\n                  variant=\"contained\"\n                  className={classes.textBox}\n                  color=\"primary\"\n                  onClick={this.deleteNode}\n                >\n                  Remove\n                </Button>\n              </th>\n              <th>\n                <TextField\n                  id=\"standard-read-only-input\"\n                  label=\"Output\"\n                  className={classes.textBox}\n                  value={this.state.output}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  helperText=\"two numbers to sum to goal number\"\n                />\n              </th>\n            </tr>\n            <tr>\n              <th>\n                <DislayTree\n                  treeArray={stringToArray(this.state.input1)}\n                />\n              </th>\n              <th></th>\n              <th>\n                <DislayTree\n                  tree={this.state.output}\n                />\n              </th>\n            </tr>\n          </table>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nDeleteNodeBST.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DeleteNodeBST);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  textBox: {\n    margin: theme.spacing.unit * 2,\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing.unit * 5,\n      width: '100%',\n    },\n  },\n});\n\nclass NextGreaterNodeInLinkedList extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      input1: \"1,7,5,1,9,2,5,1\",\n      output: \"\",\n    };\n  }\n\n  updateInput1 = (event) => {\n    this.setState({input1: event.target.value})\n  }\n\n  nextLargerNodes = (event) => {\n    const nodesArray = this.state.input1.split`,`.map(x=>+x)\n    let nextBigNodes = []\n    \n    for (let i=0; i < nodesArray.length;  i++) {\n        const remainingVals = nodesArray.slice(i+1);\n        const biggerVals = remainingVals.filter((x) => {return x>nodesArray[i]})\n        if (biggerVals.length === 0) {\n            nextBigNodes.push(0)\n        } else {\n            nextBigNodes.push(biggerVals[0])\n        }\n    }\n    this.setState({output: nextBigNodes});\n  }\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper elevation={3}>\n          <a href=\"https://leetcode.com/problems/next-greater-node-in-linked-list/\">Next Greater Node In Linked List</a>: Find a smallest possible greater node in the linked list\n          <br />\n\n          <TextField\n            id=\"standard-helperText\"\n            label=\"nums\"\n            className={classes.textBox}\n            value={this.state.input1}\n            onChange={this.updateInput1}\n            helperText=\"array of integers\"\n          />\n\n          <Button\n            variant=\"contained\"\n            className={classes.textBox}\n            color=\"primary\"\n            onClick={this.nextLargerNodes}\n          >\n            Compute!\n          </Button>\n\n          <TextField\n            id=\"standard-read-only-input\"\n            label=\"Output\"\n            className={classes.textBox}\n            value={this.state.output}\n            InputProps={{\n              readOnly: true,\n            }}\n            helperText=\"Array of smallest number in array to the left of current number that is bigger than current number\"\n          />\n\n        </Paper>\n      </div>\n    );\n  }\n}\n\nNextGreaterNodeInLinkedList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NextGreaterNodeInLinkedList);\n","import React from 'react';\nimport TwoSum from './twoSum.js'\nimport DeleteNodeBST from './deleteNodeBST.js'\nimport NextGreaterNodeInLinkedList from './nextGreaterNodeInLinkedList.js'\n\n\nclass PracticeProblems extends React.Component {\n  render() {\n    return (\n      <div>\n        <NextGreaterNodeInLinkedList />\n        <TwoSum />\n        <DeleteNodeBST />\n      </div>\n    );\n  }\n}\n\nexport default PracticeProblems;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nclass AudioSample extends React.Component {\n  render() {\n    return (\n      <audio\n        controls\n        src={this.props.audioSource}>\n      </audio>\n    );\n  }\n}\n\nexport default AudioSample;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\n\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\n\nimport AudioSample from './AudioSample.js'\n\nclass VocabTable extends React.Component {\n  render() {\n    console.log(\"https://translate.google.com/translate_tts?ie=UTF-8&amp;q=le%20survivant&amp;tl=fr&amp;total=1&amp;idx=0&amp;textlen=12&amp;tk=238654.334185&amp;client=webapp&amp;prev=input\")\n    console.log(this.props.vocabList[0].audioSource)\n    return (\n      <Paper>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                <Typography variant='h6'>\n                  French\n                </Typography>\n              </TableCell>\n              <TableCell>\n                <Typography variant='h6'>\n                  French Pronounciation\n                </Typography>\n              </TableCell>\n              <TableCell>\n                <Typography variant='h6'>\n                  Direct Translation\n                </Typography>\n              </TableCell>\n              <TableCell>\n                <Typography variant='h6'>\n                  Original English\n                </Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.vocabList.map((vocabSet) => (\n              <TableRow hover>\n                <TableCell>\n                  <Typography variant='h6'>\n                    {vocabSet.french}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant='h6'>\n                    <AudioSample\n                      audioSource={vocabSet.audioSource}                      \n                    />\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant='h6'>\n                    {vocabSet.directTranslation}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant='h6'>\n                    {vocabSet.english}\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nexport default VocabTable;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass Paragraph extends React.Component {\n  render() {\n    return (\n      <div>\n        <Table>\n          <TableBody>\n            {this.props.sentences.map((sentence) => (\n              <TableRow>\n                <TableCell>\n                  <Typography\n                    paragraph={true}\n                    variant='h6'\n                  >\n                    {sentence.french}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography\n                    paragraph={true}\n                    variant='h6'\n                  >\n                    {sentence.english}\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default Paragraph;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport AudioSample from './AudioSample.js'\nimport VocabTable from './VocabTable.js'\nimport Paragraph from './Paragraph.js'\nimport Chapter1 from './Chapter1.json'\n\nclass FrenchHarryPotter extends React.Component {\n  render() {\n    return (\n      <div>\n        <VocabTable vocabList={Chapter1.title}/>\n        {Chapter1.paragraphs.map((paragraph) => (\n          <div>\n            <Paragraph sentences={paragraph.sentences} />\n            <VocabTable vocabList={paragraph.vocabList} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default FrenchHarryPotter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SqliteHeaderViewer from './SqliteHeaderViewer.js'\nimport MarkdownViewer from './MarkdownViewer.js'\nimport CoffeeApp from './coffeeClicker/CoffeeApp.js'\nimport ScooterTableApp from './scooterTable/ScooterTableApp.js'\nimport PracticeProblems from './leetcodeProblems/PracticeProblems.js'\nimport FrenchHarryPotter from './learner/FrenchHarryPotter.js'\nimport './App.css';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n});\n\nclass App extends React.Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={this.handleChange}>\n            <Tab label=\"Harry Potter à L'École des Sorciers\" />\n            <Tab label=\"Markdown Viewer\" />\n            <Tab label=\"SQLite Header Viewer\" />\n            <Tab label=\"Coffee Clicker\" />\n            <Tab label=\"Scooter Table\" />\n            <Tab label=\"Practice Problems\" />\n          </Tabs>\n        </AppBar>\n        {value === 0 &&\n          <FrenchHarryPotter />\n        }\n        {value === 1 &&\n          <MarkdownViewer />\n        }\n        {value === 2 &&\n          <SqliteHeaderViewer />\n        }\n        {value === 3 &&\n          <CoffeeApp />\n        }\n        {value === 4 &&\n          <ScooterTableApp />\n        }\n        {value === 5 &&\n          <PracticeProblems />\n        }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}